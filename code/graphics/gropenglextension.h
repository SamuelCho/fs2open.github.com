/*
 * Copyright (C) Volition, Inc. 1999.  All rights reserved.
 *
 * All source code herein is the property of Volition, Inc. You may not sell 
 * or otherwise commercially exploit the source or things you created based on the 
 * source.
 *
*/



#ifndef _GROPENGLEXT_H
#define _GROPENGLEXT_H

#include "globalincs/pstypes.h"
#include "graphics/gropengl.h"

//EXTENSIONS!!!!
//be sure to check for this at startup and handle not finding it gracefully

//to add extensions/functions:
//Add an enum to GL extension_handle and/or GL_function_handle
//add function macro for Win32
//add function info to GL_function_info struct
//add extension info ro the GL_extension_info struct
//the structure of extensions/functions are located in gropenglextension.cpp

enum GL_extension_handle;
enum GL_function_handle;
enum GL_special_function_handle;

typedef struct ogl_extension {
	GL_extension_handle ext_handle;
	bool required_to_run;
	const char* extension_name;
} ogl_extension;

typedef struct ogl_function {
	GL_function_handle func_handle;
	GL_extension_handle ext_handle;
	int min_version;
	const char *function_name;
	ptr_u function_ptr;
} ogl_function;

typedef struct ogl_spc_function {
	GL_special_function_handle func_handle;
	const char *function_name;
} ogl_spc_function;

extern ogl_function GL_function_info[];
extern ogl_extension GL_extension_info[];
extern ogl_spc_function GL_special_function_info[];

extern bool GL_extensions_availability[];
extern ptr_u GL_function_ptrs[];
extern ptr_u GL_spc_function_ptrs[];

enum GL_extension_handle
{
	GL_EXTENSION_NONE = -1,
	GL_EXTENSION_EXT_FOG_COORD,
	GL_EXTENSION_ARB_MULTITEXTURE,
	GL_EXTENSION_ARB_TEXTURE_ENV_ADD,
	GL_EXTENSION_ARB_TEXTURE_COMPRESSION,
	GL_EXTENSION_EXT_TEXTURE_COMPRESSION_S3TC,
	GL_EXTENSION_EXT_TEXTURE_FILTER_ANISOTROPIC,
	GL_EXTENSION_ARB_TEXTURE_ENV_COMBINE,
	GL_EXTENSION_EXT_COMPILED_VERTEX_ARRAY,
	GL_EXTENSION_EXT_DRAW_RANGE_ELEMENTS,
	GL_EXTENSION_ARB_TEXTURE_MIRRORED_REPEAT,
	GL_EXTENSION_ARB_TEXTURE_NON_POWER_OF_TWO,
	GL_EXTENSION_ARB_VERTEX_BUFFER_OBJECT,
	GL_EXTENSION_ARB_PIXEL_BUFFER_OBJECT,
	GL_EXTENSION_SGIS_GENERATE_MIPMAP,
	GL_EXTENSION_EXT_FRAMEBUFFER_OBJECT,
	GL_EXTENSION_ARB_TEXTURE_RECTANGLE,
	GL_EXTENSION_EXT_BGRA,
	GL_EXTENSION_ARB_TEXTURE_CUBE_MAP,
	GL_EXTENSION_EXT_TEXTURE_LOD_BIAS,
	GL_EXTENSION_ARB_POINT_SPRITE,
	GL_EXTENSION_ARB_SHADING_LANGUAGE_100,
	GL_EXTENSION_ARB_SHADER_OBJECTS,
	GL_EXTENSION_ARB_VERTEX_PROGRAM,
	GL_EXTENSION_ARB_VERTEX_SHADER,
	GL_EXTENSION_ARB_FRAGMENT_SHADER,
	GL_EXTENSION_SM30,
	GL_EXTENSION_ARB_FLOATING_POINT_TEXTURES,
	GL_EXTENSION_ARB_DRAW_ELEMENTS_BASE_VERTEX,
	GL_EXTENSION_EXT_FRAMEBUFFER_BLIT,
	GL_EXTENSION_ARB_GEOMETRY_SHADER4,
	GL_EXTENSION_EXT_TEXTURE_ARRAY,
	GL_EXTENSION_ARB_UNIFORM_BUFFER_OBJECT,
	GL_EXTENSION_EXT_TRANSFORM_FEEDBACK,
	GL_EXTENSION_ARB_DRAW_INSTANCED,
	GL_EXTENSION_ARB_TEXTURE_BUFFER,
	GL_EXTENSION_EXT_GPU_SHADER4,
	GL_EXTENSION_ARB_VERTEX_ARRAY_OBJECT,
	NUM_GL_EXTENSIONS
};

enum GL_function_handle
{
	GL_FUNC_MULTI_TEX_COORD_2F,
	GL_FUNC_ACTIVE_TEXTURE,
	GL_FUNC_CLIENT_ACTIVE_TEXTURE,
	GL_FUNC_COMPRESSED_TEX_IMAGE_2D,
	GL_FUNC_COMPRESSED_TEX_SUB_IMAGE_2D,
	GL_FUNC_GET_COMPRESSED_TEX_IMAGE,
	GL_FUNC_LOCK_ARRAYS,
	GL_FUNC_UNLOCK_ARRAYS,
	GL_FUNC_DRAW_RANGE_ELEMENTS,
	GL_FUNC_BIND_BUFFER,
	GL_FUNC_DELETE_BUFFERS,
	GL_FUNC_GEN_BUFFERS,
	GL_FUNC_BUFFER_DATA,
	GL_FUNC_BUFFER_SUB_DATA,
	GL_FUNC_MAP_BUFFER,
	GL_FUNC_UNMAP_BUFFER,
	GL_FUNC_IS_RENDERBUFFER,
	GL_FUNC_BIND_RENDERBUFFER,
	GL_FUNC_DELETE_RENDERBUFFERS,
	GL_FUNC_GEN_RENDERBUFFERS,
	GL_FUNC_RENDERBUFFER_STORAGE,
	GL_FUNC_GET_RENDERBUFFER_PARAMETER_IV,
	GL_FUNC_IS_FRAMEBUFFER,
	GL_FUNC_BIND_FRAMEBUFFER,
	GL_FUNC_DELETE_FRAMEBUFFERS,
	GL_FUNC_GEN_FRAMEBUFFERS,
	GL_FUNC_CHECK_FRAMEBUFFER_STATUS,
	GL_FUNC_FRAMEBUFFER_TEXTURE_2D,
	GL_FUNC_FRAMEBUFFER_RENDERBUFFER,
	GL_FUNC_GET_FRAMEBUFFER_ATTACHMENT_PARAMETER_IV,
	GL_FUNC_GENERATE_MIPMAP,
	GL_FUNC_DELETE_OBJECT,
	GL_FUNC_CREATE_SHADER_OBJECT,
	GL_FUNC_SHADER_SOURCE,
	GL_FUNC_COMPILE_SHADER,
	GL_FUNC_GET_OBJECT_PARAMETERIV,
	GL_FUNC_GET_INFO_LOG,
	GL_FUNC_CREATE_PROGRAM_OBJECT,
	GL_FUNC_ATTACH_OBJECT,
	GL_FUNC_LINK_PROGRAM,
	GL_FUNC_USE_PROGRAM_OBJECT,
	GL_FUNC_VALIDATE_PROGRAM,
	GL_FUNC_ENABLE_VERTEX_ATTRIB_ARRAY,
	GL_FUNC_DISABLE_VERTEX_ATTRIB_ARRAY,
	GL_FUNC_GET_ATTRIB_LOCATION,
	GL_FUNC_BIND_ATTRIB_LOCATION,
	GL_FUNC_VERTEX_ATTRIB_POINTER,
	GL_FUNC_VERTEX_ATTRIB1F,
	GL_FUNC_VERTEX_ATTRIB2F,
	GL_FUNC_VERTEX_ATTRIB3F,
	GL_FUNC_VERTEX_ATTRIB4F,
	GL_FUNC_GET_UNIFORM_LOCATION,
	GL_FUNC_GET_UNIFORMIV,
	GL_FUNC_UNIFORM1F,
	GL_FUNC_UNIFORM2F,
	GL_FUNC_UNIFORM3F,
	GL_FUNC_UNIFORM4F,
	GL_FUNC_UNIFORM1FV,
	GL_FUNC_UNIFORM3FV,
	GL_FUNC_UNIFORM4FV,
	GL_FUNC_UNIFORM1I,
	GL_FUNC_UNIFORM1IV,
	GL_FUNC_UNIFORM_MATRIX4FV,
	GL_FUNC_DRAWBUFFERS,
	GL_FUNC_DRAW_ELEMENTS_BASE_VERTEX,
	GL_FUNC_DRAW_RANGE_ELEMENTS_BASE_VERTEX,
	GL_FUNC_DRAW_ELEMENTS_INSTANCED_BASE_VERTEX,
	GL_FUNC_MULTI_DRAW_ELEMENTS_BASE_VERTEX,
	GL_FUNC_BLITFRAMEBUFFER,
	GL_FUNC_PROGRAM_PARAMETERI,
	GL_FUNC_TEXIMAGE3D,
	GL_FUNC_FRAMEBUFFER_TEXTURE,
	GL_FUNC_GET_UNIFORM_INDICES,
	GL_FUNC_GET_ACTIVE_UNIFORMS_IV,
	GL_FUNC_GET_ACTIVE_UNIFORM_NAME,
	GL_FUNC_GET_UNIFORM_BLOCK_INDEX,
	GL_FUNC_GET_ACTIVE_UNIFORM_BLOCK_IV,
	GL_FUNC_GET_ACTIVE_UNIFORM_BLOCK_NAME,
	GL_FUNC_UNIFORM_BLOCK_BINDING,
	GL_FUNC_BEGIN_TRANSFORM_FEEDBACK,
	GL_FUNC_END_TRANSFORM_FEEDBACK,
	GL_FUNC_BIND_BUFFER_RANGE,
	GL_FUNC_BIND_BUFFER_OFFSET,
	GL_FUNC_BIND_BUFFER_BASE,
	GL_FUNC_TRANSFORM_FEEDBACK_VARYINGS,
	GL_FUNC_GET_TRANSFORM_FEEDBACK_VARYING,
	GL_FUNC_ARB_DRAW_ARRAYS_INSTANCED,
	GL_FUNC_ARB_DRAW_ELEMENTS_INSTANCED,
	GL_FUNC_ARB_TEX_BUFFER,
	GL_FUNC_BIND_FRAG_DATA_LOCATION,
	GL_FUNC_GET_FRAG_DATA_LOCATION,
	GL_FUNC_BIND_VERTEX_ARRAY,
	GL_FUNC_DELETE_VERTEX_ARRAYS,
	GL_FUNC_GEN_VERTEX_ARRAYS,
	GL_FUNC_IS_VERTEX_ARRAY,

	NUM_GL_FUNCTIONS
};

enum GL_special_function_handle
{
	GL_SPC_FUNC_WGL_SWAP_INTERVAL,
	GL_SPC_FUNC_GLX_SWAP_INTERVAL,
	NUM_GL_SPC_FUNCTIONS
};

// special extensions/functions (OS specific, non-GL stuff)
#define OGL_SPC_WGL_SWAP_INTERVAL		0
#define OGL_SPC_GLX_SWAP_INTERVAL		1

#define NUM_OGL_EXT_SPECIAL				2


#define Is_Extension_Enabled(x)		GL_extensions_availability[x]

void opengl_extensions_init();


#define GLEXT_CALL(i, x) if (GL_function_ptrs[i]) \
							((x)GL_function_ptrs[i])

// the same as GLEXT_CALL() except that it can be used with a cast or in an if statement
// this doesn't do NULL ptr checking so you have to be careful with it!
#define GLEXT_CALL2(i, x) ((x)GL_function_ptrs[i])

#define GLEXT_SPC_CALL(i, x) if (GL_spc_function_ptrs[i]) \
							((x)GL_spc_function_ptrs[i])


#ifdef __APPLE__
// !-----REMOVE WHEN WE MIGRATE TO THE OPENGL CORE PROFILE-----!
typedef void (* glDrawRangeElementsProcPtr) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
typedef void (* glTexBufferARBProcPtr) (GLenum target, GLenum internalformat, GLuint buffer);
typedef GLuint (* glGetUniformBlockIndexARBProcPtr) (GLuint program, const GLchar *uniformBlockName);

#define GL_TEXTURE_BUFFER_ARB               0x8C2A
#define GL_UNIFORM_BUFFER                   0x8A11
// !-----REMOVE WHEN WE MIGRATE TO THE OPENGL CORE PROFILE-----!

// OS X doesn't have the PFN* names so we have to use the real OSX function ptrs
#define PFNGLMULTITEXCOORD2FARBPROC				glMultiTexCoord2fARBProcPtr
#define PFNGLACTIVETEXTUREARBPROC				glActiveTextureARBProcPtr
#define PFNGLCLIENTACTIVETEXTUREARBPROC			glClientActiveTextureARBProcPtr
#define PFNGLCOMPRESSEDTEXIMAGE2DPROC			glCompressedTexImage2DARBProcPtr
#define PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC		glCompressedTexSubImage2DARBProcPtr
#define PFNGLGETCOMPRESSEDTEXIMAGEARBPROC		glGetCompressedTexImageARBProcPtr
//#define PFNGLSECONDARYCOLOR3FVEXTPROC			glSecondaryColor3fvEXTProcPtr
//#define PFNGLSECONDARYCOLOR3UBVEXTPROC		glSecondaryColor3ubvEXTProcPtr
#define PFNGLLOCKARRAYSEXTPROC					glLockArraysEXTProcPtr
#define PFNGLUNLOCKARRAYSEXTPROC				glUnlockArraysEXTProcPtr
//#define PFNGLLOADTRANSPOSEMATRIXFARBPROC		glLoadTransposeMatrixfARBProcPtr
//#define PFNGLMULTTRANSPOSEMATRIXFARBPROC		glMultTransposeMatrixfARBProcPtr
#define PFNGLDRAWRANGEELEMENTSPROC				glDrawRangeElementsProcPtr
#define PFNGLBINDBUFFERARBPROC					glBindBufferARBProcPtr
#define PFNGLDELETEBUFFERSARBPROC				glDeleteBuffersARBProcPtr
#define PFNGLGENBUFFERSARBPROC					glGenBuffersARBProcPtr
#define PFNGLBUFFERDATAARBPROC					glBufferDataARBProcPtr
#define PFNGLBUFFERSUBDATAARBPROC				glBufferSubDataARBProcPtr
#define PFNGLMAPBUFFERARBPROC					glMapBufferARBProcPtr
#define PFNGLUNMAPBUFFERARBPROC					glUnmapBufferARBProcPtr
#define PFNGLISRENDERBUFFEREXTPROC				glIsRenderbufferEXTProcPtr
#define PFNGLBINDRENDERBUFFEREXTPROC			glBindRenderbufferEXTProcPtr
#define PFNGLDELETERENDERBUFFERSEXTPROC			glDeleteRenderbuffersEXTProcPtr
#define PFNGLGENRENDERBUFFERSEXTPROC			glGenRenderbuffersEXTProcPtr
#define PFNGLRENDERBUFFERSTORAGEEXTPROC			glRenderbufferStorageEXTProcPtr
#define PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	glGetRenderbufferParameterivEXTProcPtr
#define PFNGLISFRAMEBUFFEREXTPROC				glIsFramebufferEXTProcPtr
#define PFNGLBINDFRAMEBUFFEREXTPROC				glBindFramebufferEXTProcPtr
#define PFNGLDELETEFRAMEBUFFERSEXTPROC			glDeleteFramebuffersEXTProcPtr
#define PFNGLGENFRAMEBUFFERSEXTPROC				glGenFramebuffersEXTProcPtr
#define PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC		glCheckFramebufferStatusEXTProcPtr
#define PFNGLFRAMEBUFFERTEXTURE2DEXTPROC		glFramebufferTexture2DEXTProcPtr
#define PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC		glFramebufferRenderbufferEXTProcPtr
#define PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glGetFramebufferAttachmentParameterivEXTProcPtr
#define PFNGLGENERATEMIPMAPEXTPROC				glGenerateMipmapEXTProcPtr
#define PFNGLDELETEOBJECTARBPROC				glDeleteObjectARBProcPtr
#define PFNGLCREATESHADEROBJECTARBPROC			glCreateShaderObjectARBProcPtr
#define PFNGLSHADERSOURCEARBPROC				glShaderSourceARBProcPtr
#define PFNGLCOMPILESHADERARBPROC				glCompileShaderARBProcPtr
#define PFNGLGETOBJECTPARAMETERIVARBPROC		glGetObjectParameterivARBProcPtr
#define PFNGLGETINFOLOGARBPROC					glGetInfoLogARBProcPtr
#define PFNGLCREATEPROGRAMOBJECTARBPROC			glCreateProgramObjectARBProcPtr
#define PFNGLATTACHOBJECTARBPROC				glAttachObjectARBProcPtr
#define PFNGLLINKPROGRAMARBPROC					glLinkProgramARBProcPtr
#define PFNGLUSEPROGRAMOBJECTARBPROC			glUseProgramObjectARBProcPtr
#define PFNGLVALIDATEPROGRAMARBPROC				glValidateProgramARBProcPtr
#define PFNGLENABLEVERTEXATTRIBARRAYARBPROC		glEnableVertexAttribArrayARBProcPtr
#define PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	glDisableVertexAttribArrayARBProcPtr
#define PFNGLGETATTRIBLOCATIONARBPROC			glGetAttribLocationARBProcPtr
#define PFNGLBINDATTRIBLOCATIONARBPROC			glBindAttribLocationARBProcPtr
#define PFNGLVERTEXATTRIBPOINTERARBPROC			glVertexAttribPointerARBProcPtr
#define PFNGLVERTEXATTRIB1FARBPROC				glVertexAttrib1fARBProcPtr
#define PFNGLVERTEXATTRIB2FARBPROC				glVertexAttrib2fARBProcPtr
#define PFNGLVERTEXATTRIB3FARBPROC				glVertexAttrib3fARBProcPtr
#define PFNGLVERTEXATTRIB4FARBPROC				glVertexAttrib4fARBProcPtr
#define PFNGLGETUNIFORMLOCATIONARBPROC			glGetUniformLocationARBProcPtr
#define PFNGLGETUNIFORMIVARBPROC				glGetUniformivARBProcPtr
#define PFNGLUNIFORM1FARBPROC					glUniform1fARBProcPtr
#define PFNGLUNIFORM2FARBPROC					glUniform2fARBProcPtr
#define PFNGLUNIFORM3FARBPROC					glUniform3fARBProcPtr
#define PFNGLUNIFORM4FARBPROC					glUniform4fARBProcPtr
#define PFNGLUNIFORM1FVARBPROC					glUniform1fvARBProcPtr
#define PFNGLUNIFORM3FVARBPROC					glUniform3fvARBProcPtr
#define PFNGLUNIFORM4FVARBPROC					glUniform4fvARBProcPtr
#define PFNGLUNIFORM1IARBPROC					glUniform1iARBProcPtr
#define PFNGLUNIFORM1IVARBPROC					glUniform1ivARBProcPtr
#define PFNGLUNIFORMMATRIX4FVARBPROC			glUniformMatrix4fvARBProcPtr
#define PFNGLDRAWBUFFERSPROC					glDrawBuffersARBProcPtr
#define PFNGLDRAWELEMENTSBASEVERTEXPROC         glDrawElementsBaseVertexProcPtr
#define PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC    glDrawRangeElementsBaseVertexProcPtr
#define PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glDrawElementsInstancedBaseVertexProcPtr
#define PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC    glMultiDrawElementsBaseVertexProcPtr
#define PFNGLBLITFRAMEBUFFEREXTPROC				glBlitFramebufferEXTProcPtr
#define PFNGLPROGRAMPARAMETERIARBPROC			glProgramParameteriARBProcPtr
#define PFNGLFRAMEBUFFERTEXTUREARBPROC			glFramebufferTextureARBProcPtr
#define PFNGLGETUNIFORMINDICESPROC				glGetUniformIndicesARBProcPtr
#define PFNGLGETACTIVEUNIFORMSIVPROC			glGetActiveUniformsivARBProcPtr
#define PFNGLGETACTIVEUNIFORMNAMEPROC			glGetActiveUniformNameARBProcPtr
#define PFNGLGETUNIFORMBLOCKINDEXPROC			glGetUniformBlockIndexARBProcPtr
#define PFNGLGETACTIVEUNIFORMBLOCKIVPROC		glGetActiveUniformBlockivARBProcPtr
#define PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC		glGetActiveUniformBlockNameARBProcPtr
#define PFNGLUNIFORMBLOCKBINDINGPROC			glUniformBlockBindingARBProcPtr
#define PFNGLBEGINTRANSFORMFEEDBACKEXTPROC		glBeginTransformFeedbackEXTProcPtr
#define PFNGLENDTRANSFORMFEEDBACKEXTPROC		glEndTransformFeedbackEXTProcPtr
#define PFNGLBINDBUFFERRANGEEXTPROC				glBindBufferRangeEXTProcPtr
#define PFNGLBINDBUFFEROFFSETEXTPROC			glBindBufferOffsetEXTProcPtr
#define PFNGLBINDBUFFERBASEEXTPROC				glBindBufferBaseEXTProcPtr
#define PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	glTransformFeedbackVaryingsEXTProcPtr
#define PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	glGetTransformFeedbackVaryingEXTProcPtr
#define PFNGLDRAWARRAYSINSTANCEDARBPROC			glDrawArraysInstancedARBProcPtr
#define PFNGLDRAWELEMENTSINSTANCEDARBPROC		glDrawElementsInstancedARBProcPtr
#define PFNGLTEXBUFFERARBPROC					glTexBufferARBProcPtr
#define PFNGLBINDFRAGDATALOCATIONEXTPROC		glBindFragDataLocationEXTProcPtr
#define PFNGLGETFRAGDATALOCATIONEXTPROC			glGetFragDataLocationEXTProcPtr
#define PFNGLBINDVERTEXARRAYPROC				glBindVertexArrayProcPtr
#define PFNGLDELETEVERTEXARRAYSPROC				glDeleteVertexArraysProcPtr
#define PFNGLGENVERTEXARRAYSPROC				glGenVertexArraysProcPtr
#define PFNGLISVERTEXARRAYPROC					glIsVertexArrayProcPtr
#endif	// __APPLE__

#define vglMultiTexCoord2fARB			GLEXT_CALL( GL_FUNC_MULTI_TEX_COORD_2F, PFNGLMULTITEXCOORD2FARBPROC )
#define vglActiveTextureARB				GLEXT_CALL( GL_FUNC_ACTIVE_TEXTURE, PFNGLACTIVETEXTUREARBPROC )
#define vglClientActiveTextureARB		GLEXT_CALL( GL_FUNC_CLIENT_ACTIVE_TEXTURE, PFNGLCLIENTACTIVETEXTUREARBPROC )
#define vglCompressedTexImage2D			GLEXT_CALL( GL_FUNC_COMPRESSED_TEX_IMAGE_2D, PFNGLCOMPRESSEDTEXIMAGE2DPROC )
#define vglCompressedTexSubImage2D		GLEXT_CALL( GL_FUNC_COMPRESSED_TEX_SUB_IMAGE_2D, PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC )
#define vglGetCompressedTexImageARB		GLEXT_CALL( GL_FUNC_GET_COMPRESSED_TEX_IMAGE, PFNGLGETCOMPRESSEDTEXIMAGEARBPROC )
#define vglLockArraysEXT				GLEXT_CALL( GL_FUNC_LOCK_ARRAYS, PFNGLLOCKARRAYSEXTPROC )
#define vglUnlockArraysEXT				GLEXT_CALL( GL_FUNC_UNLOCK_ARRAYS, PFNGLUNLOCKARRAYSEXTPROC )
#define vglDrawRangeElements			GLEXT_CALL( GL_FUNC_DRAW_RANGE_ELEMENTS, PFNGLDRAWRANGEELEMENTSPROC )
#define vglBindBufferARB				GLEXT_CALL( GL_FUNC_BIND_BUFFER, PFNGLBINDBUFFERARBPROC )
#define vglDeleteBuffersARB				GLEXT_CALL( GL_FUNC_DELETE_BUFFERS, PFNGLDELETEBUFFERSARBPROC )
#define vglGenBuffersARB				GLEXT_CALL( GL_FUNC_GEN_BUFFERS, PFNGLGENBUFFERSARBPROC )
#define vglBufferDataARB				GLEXT_CALL( GL_FUNC_BUFFER_DATA, PFNGLBUFFERDATAARBPROC )
#define vglBufferSubDataARB				GLEXT_CALL( GL_FUNC_BUFFER_SUB_DATA, PFNGLBUFFERSUBDATAARBPROC )
#define vglMapBufferARB					GLEXT_CALL2( GL_FUNC_MAP_BUFFER, PFNGLMAPBUFFERARBPROC )
#define vglUnmapBufferARB				GLEXT_CALL( GL_FUNC_UNMAP_BUFFER, PFNGLUNMAPBUFFERARBPROC )
#define vglIsRenderbufferEXT			GLEXT_CALL2( GL_FUNC_IS_RENDERBUFFER, PFNGLISRENDERBUFFEREXTPROC )
#define vglBindRenderbufferEXT			GLEXT_CALL( GL_FUNC_BIND_RENDERBUFFER, PFNGLBINDRENDERBUFFEREXTPROC )
#define vglDeleteRenderbuffersEXT		GLEXT_CALL( GL_FUNC_DELETE_RENDERBUFFERS, PFNGLDELETERENDERBUFFERSEXTPROC )
#define vglGenRenderbuffersEXT			GLEXT_CALL( GL_FUNC_GEN_RENDERBUFFERS, PFNGLGENRENDERBUFFERSEXTPROC )
#define vglRenderbufferStorageEXT		GLEXT_CALL( GL_FUNC_RENDERBUFFER_STORAGE, PFNGLRENDERBUFFERSTORAGEEXTPROC )
#define vglGetRenderbufferParameterivEXT	GLEXT_CALL( GL_FUNC_GET_RENDERBUFFER_PARAMETER_IV, PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC )
#define vglIsFramebufferEXT				GLEXT_CALL2( GL_FUNC_IS_FRAMEBUFFER, PFNGLISFRAMEBUFFEREXTPROC )
#define vglBindFramebufferEXT			GLEXT_CALL( GL_FUNC_BIND_FRAMEBUFFER, PFNGLBINDFRAMEBUFFEREXTPROC )
#define vglDeleteFramebuffersEXT		GLEXT_CALL( GL_FUNC_DELETE_FRAMEBUFFERS, PFNGLDELETEFRAMEBUFFERSEXTPROC )
#define vglGenFramebuffersEXT			GLEXT_CALL( GL_FUNC_GEN_FRAMEBUFFERS, PFNGLGENFRAMEBUFFERSEXTPROC )
#define vglCheckFramebufferStatusEXT	GLEXT_CALL2( GL_FUNC_CHECK_FRAMEBUFFER_STATUS, PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC )
#define vglFramebufferTexture2DEXT		GLEXT_CALL( GL_FUNC_FRAMEBUFFER_TEXTURE_2D, PFNGLFRAMEBUFFERTEXTURE2DEXTPROC )
#define vglFramebufferRenderbufferEXT	GLEXT_CALL( GL_FUNC_FRAMEBUFFER_RENDERBUFFER, PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC )
#define vglGetFramebufferAttachmentParameterivEXT	GLEXT_CALL( GL_FUNC_GET_FRAMEBUFFER_ATTACHMENT_PARAMETER_IV, PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC )
#define vglGenerateMipmapEXT			GLEXT_CALL( GL_FUNC_GENERATE_MIPMAP, PFNGLGENERATEMIPMAPEXTPROC )
#define vglDeleteObjectARB				GLEXT_CALL( GL_FUNC_DELETE_OBJECT, PFNGLDELETEOBJECTARBPROC )
#define vglCreateShaderObjectARB		GLEXT_CALL2( GL_FUNC_CREATE_SHADER_OBJECT, PFNGLCREATESHADEROBJECTARBPROC )
#define vglShaderSourceARB				GLEXT_CALL( GL_FUNC_SHADER_SOURCE, PFNGLSHADERSOURCEARBPROC )
#define vglCompileShaderARB				GLEXT_CALL( GL_FUNC_COMPILE_SHADER, PFNGLCOMPILESHADERARBPROC )
#define vglGetObjectParameterivARB		GLEXT_CALL( GL_FUNC_GET_OBJECT_PARAMETERIV, PFNGLGETOBJECTPARAMETERIVARBPROC )
#define vglGetInfoLogARB				GLEXT_CALL( GL_FUNC_GET_INFO_LOG, PFNGLGETINFOLOGARBPROC )
#define vglCreateProgramObjectARB		GLEXT_CALL2( GL_FUNC_CREATE_PROGRAM_OBJECT, PFNGLCREATEPROGRAMOBJECTARBPROC )
#define vglAttachObjectARB				GLEXT_CALL( GL_FUNC_ATTACH_OBJECT, PFNGLATTACHOBJECTARBPROC )
#define vglLinkProgramARB				GLEXT_CALL( GL_FUNC_LINK_PROGRAM, PFNGLLINKPROGRAMARBPROC )
#define vglUseProgramObjectARB			GLEXT_CALL( GL_FUNC_USE_PROGRAM_OBJECT, PFNGLUSEPROGRAMOBJECTARBPROC )
#define vglValidateProgramARB			GLEXT_CALL( GL_FUNC_VALIDATE_PROGRAM, PFNGLVALIDATEPROGRAMARBPROC )
#define vglEnableVertexAttribArrayARB	GLEXT_CALL( GL_FUNC_ENABLE_VERTEX_ATTRIB_ARRAY, PFNGLENABLEVERTEXATTRIBARRAYARBPROC )
#define vglDisableVertexAttribArrayARB	GLEXT_CALL( GL_FUNC_DISABLE_VERTEX_ATTRIB_ARRAY, PFNGLDISABLEVERTEXATTRIBARRAYARBPROC )
#define vglGetAttribLocationARB			GLEXT_CALL2( GL_FUNC_GET_ATTRIB_LOCATION, PFNGLGETATTRIBLOCATIONARBPROC )
#define vglBindAttribLocationARB		GLEXT_CALL2( GL_FUNC_BIND_ATTRIB_LOCATION, PFNGLBINDATTRIBLOCATIONARBPROC )
#define vglVertexAttribPointerARB		GLEXT_CALL( GL_FUNC_VERTEX_ATTRIB_POINTER, PFNGLVERTEXATTRIBPOINTERARBPROC )
#define vglVertexAttrib1fARB			GLEXT_CALL( GL_FUNC_VERTEX_ATTRIB1F, PFNGLVERTEXATTRIB1FARBPROC )
#define vglVertexAttrib2fARB			GLEXT_CALL( GL_FUNC_VERTEX_ATTRIB2F, PFNGLVERTEXATTRIB2FARBPROC )
#define vglVertexAttrib3fARB			GLEXT_CALL( GL_FUNC_VERTEX_ATTRIB3F, PFNGLVERTEXATTRIB3FARBPROC )
#define vglVertexAttrib4fARB			GLEXT_CALL( GL_FUNC_VERTEX_ATTRIB4F, PFNGLVERTEXATTRIB4FARBPROC )
#define vglGetUniformLocationARB		GLEXT_CALL2( GL_FUNC_GET_UNIFORM_LOCATION, PFNGLGETUNIFORMLOCATIONARBPROC )
#define vglGetUniformivARB				GLEXT_CALL( GL_FUNC_GET_UNIFORMIV, PFNGLGETUNIFORMIVARBPROC )
#define vglUniform1fARB					GLEXT_CALL( GL_FUNC_UNIFORM1F, PFNGLUNIFORM1FARBPROC )
#define vglUniform2fARB					GLEXT_CALL( GL_FUNC_UNIFORM2F, PFNGLUNIFORM2FARBPROC )
#define vglUniform3fARB					GLEXT_CALL( GL_FUNC_UNIFORM3F, PFNGLUNIFORM3FARBPROC )
#define vglUniform4fARB					GLEXT_CALL( GL_FUNC_UNIFORM4F, PFNGLUNIFORM4FARBPROC )
#define vglUniform1fvARB				GLEXT_CALL( GL_FUNC_UNIFORM1FV, PFNGLUNIFORM1FVARBPROC )
#define vglUniform3fvARB				GLEXT_CALL( GL_FUNC_UNIFORM3FV, PFNGLUNIFORM3FVARBPROC )
#define vglUniform4fvARB				GLEXT_CALL( GL_FUNC_UNIFORM4FV, PFNGLUNIFORM4FVARBPROC )
#define vglUniform1iARB					GLEXT_CALL( GL_FUNC_UNIFORM1I, PFNGLUNIFORM1IARBPROC )
#define vglUniform1ivARB					GLEXT_CALL( GL_FUNC_UNIFORM1IV, PFNGLUNIFORM1IVARBPROC )
#define vglUniformMatrix4fvARB			GLEXT_CALL( GL_FUNC_UNIFORM_MATRIX4FV, PFNGLUNIFORMMATRIX4FVARBPROC )
#define vglDrawBuffers					GLEXT_CALL( GL_FUNC_DRAWBUFFERS, PFNGLDRAWBUFFERSPROC )
#define vglDrawElementsBaseVertex		GLEXT_CALL( GL_FUNC_DRAW_ELEMENTS_BASE_VERTEX, PFNGLDRAWELEMENTSBASEVERTEXPROC )
#define vglDrawRangeElementsBaseVertex	GLEXT_CALL( GL_FUNC_DRAW_RANGE_ELEMENTS_BASE_VERTEX, PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC )
#define vglDrawElementsInstancedBaseVertex		GLEXT_CALL( GL_FUNC_DRAW_ELEMENTS_INSTANCED_BASE_VERTEX, PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC )
#define vglMultiDrawElementsBaseVertex	GLEXT_CALL( GL_FUNC_MULTI_DRAW_ELEMENTS_BASE_VERTEX, PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC )
#define vglBlitFramebufferEXT			GLEXT_CALL( GL_FUNC_BLITFRAMEBUFFER, PFNGLBLITFRAMEBUFFEREXTPROC )
#define vglProgramParameteriARB			GLEXT_CALL( GL_FUNC_PROGRAM_PARAMETERI, PFNGLPROGRAMPARAMETERIARBPROC )
#define vglGetUniformIndicesARB			GLEXT_CALL( GL_FUNC_GET_UNIFORM_INDICES, PFNGLGETUNIFORMINDICESPROC )
#define vglGetActiveUniformsivARB		GLEXT_CALL( GL_FUNC_GET_ACTIVE_UNIFORMS_IV, PFNGLGETACTIVEUNIFORMSIVPROC )
#define vglGetActiveUniformNameARB		GLEXT_CALL( GL_FUNC_GET_ACTIVE_UNIFORM_NAME, PFNGLGETACTIVEUNIFORMNAMEPROC )
#define vglGetUniformBlockIndexARB		GLEXT_CALL2( GL_FUNC_GET_UNIFORM_BLOCK_INDEX, PFNGLGETUNIFORMBLOCKINDEXPROC )
#define vglGetActiveUniformBlockivARB	GLEXT_CALL( GL_FUNC_GET_ACTIVE_UNIFORM_BLOCK_IV, PFNGLGETACTIVEUNIFORMBLOCKIVPROC )
#define vglGetActiveUniformBlockNameARB	GLEXT_CALL( GL_FUNC_GET_ACTIVE_UNIFORM_BLOCK_NAME, PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC )
#define vglUniformBlockBindingARB		GLEXT_CALL( GL_FUNC_UNIFORM_BLOCK_BINDING, PFNGLUNIFORMBLOCKBINDINGPROC )
#define vglBeginTransformFeedbackEXT	GLEXT_CALL( GL_FUNC_BEGIN_TRANSFORM_FEEDBACK, PFNGLBEGINTRANSFORMFEEDBACKEXTPROC )
#define vglEndTransformFeedbackEXT		GLEXT_CALL( GL_FUNC_END_TRANSFORM_FEEDBACK, PFNGLENDTRANSFORMFEEDBACKEXTPROC ) 
#define vglBindBufferRangeEXT			GLEXT_CALL( GL_FUNC_BIND_BUFFER_RANGE, PFNGLBINDBUFFERRANGEEXTPROC )
#define vglBindBufferOffsetEXT			GLEXT_CALL( GL_FUNC_BIND_BUFFER_OFFSET, PFNGLBINDBUFFEROFFSETEXTPROC )
#define vglBindBufferBaseEXT			GLEXT_CALL( GL_FUNC_BIND_BUFFER_BASE, PFNGLBINDBUFFERBASEEXTPROC ) 
#define vglTransformFeedbackVaryingsEXT	GLEXT_CALL( GL_FUNC_TRANSFORM_FEEDBACK_VARYINGS, PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC )
#define vglGetTransformFeedbackVaryingEXT	GLEXT_CALL( GL_FUNC_GET_TRANSFORM_FEEDBACK_VARYING, PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC )
#define vglDrawArraysInstancedARB		GLEXT_CALL( GL_FUNC_ARB_DRAW_ARRAYS_INSTANCED, PFNGLDRAWARRAYSINSTANCEDARBPROC )
#define vglDrawElementsInstancedARB		GLEXT_CALL( GL_FUNC_ARB_DRAW_ELEMENTS_INSTANCED, PFNGLDRAWELEMENTSINSTANCEDARBPROC )
#define vglTexBufferARB					GLEXT_CALL( GL_FUNC_ARB_TEX_BUFFER, PFNGLTEXBUFFERARBPROC )
#define vglBindFragDataLocationEXT		GLEXT_CALL( GL_FUNC_BIND_FRAG_DATA_LOCATION, PFNGLBINDFRAGDATALOCATIONEXTPROC )
#define vglGetFragDataLocationEXT		GLEXT_CALL( GL_FUNC_GET_FRAG_DATA_LOCATION, PFNGLGETFRAGDATALOCATIONEXTPROC )
#define vglBindVertexArray				GLEXT_CALL( GL_FUNC_BIND_VERTEX_ARRAY, PFNGLBINDVERTEXARRAYPROC )
#define vglDeleteVertexArrays			GLEXT_CALL( GL_FUNC_DELETE_VERTEX_ARRAYS, PFNGLDELETEVERTEXARRAYSPROC )
#define vglGenVertexArrays				GLEXT_CALL( GL_FUNC_GEN_VERTEX_ARRAYS, PFNGLGENVERTEXARRAYSPROC )
#define vglIsVertexArray				GLEXT_CALL( GL_FUNC_IS_VERTEX_ARRAY, PFNGLISVERTEXARRAYPROC )
#ifndef __APPLE__
#define vglTexImage3D					GLEXT_CALL( GL_FUNC_TEXIMAGE3D, PFNGLTEXIMAGE3DPROC )
#else
#define vglTexImage3D                   glTexImage3D
#endif
#define vglFramebufferTextureARB		GLEXT_CALL( GL_FUNC_FRAMEBUFFER_TEXTURE, PFNGLFRAMEBUFFERTEXTUREARBPROC )

// special extensions
#define vwglSwapIntervalEXT			GLEXT_SPC_CALL( GL_SPC_FUNC_WGL_SWAP_INTERVAL, PFNWGLSWAPINTERVALEXTPROC )
#define vglXSwapIntervalSGI			GLEXT_SPC_CALL( GL_SPC_FUNC_GLX_SWAP_INTERVAL, PFNGLXSWAPINTERVALSGIPROC )

#endif // _GROPENGLEXT_H
